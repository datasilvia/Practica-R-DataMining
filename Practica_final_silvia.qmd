---
title: "practica_final"
format: html
editor: visual
---

Vamos a utilizar el dataset de semillas que se encuentra aquí: https://archive.ics.uci.edu/ml/datasets/seeds#

Primero vamos a descargarnos el dataset con el siguiente comando:

```{r}
library(tidyverse)
df_seeds <- read.table('https://archive.ics.uci.edu/ml/machine-learning-databases/00236/seeds_dataset.txt', col.names =c('area','perimetro','compacto','longitud','anchura','coeficient.asimetria','longitud.ranura','tipo'))
```

#### PREGUNTA 1 (0.5pt)

¿Cuantas filas y cuantas columnas tiene el dataframe df_seeds?

**Respuesta**:

```{r}
paste('El dataframe tiene', nrow(df_seeds) ,'filas y', ncol(df_seeds), 'columnas.')

#otra forma es mirarlo con:

dim(df_seeds)

#Y también se puede ver en la primera línea de la estructura del dataframe:

str(df_seeds)
```

#### PREGUNTA 2 (0.5pt)

Vamos a convertir en factor la columna tipo. Vamos a reemplazar los números por su correspondiente etiqueta (label). La correspondencia entre el código y el tipo es:

-   1 - Kama
-   2 - Rosa
-   3 - Canadian

Convierte en factor la columna tipo, respetando las etiquetas:

**Respuesta**:

```{r}
df_seeds$tipo <- factor(df_seeds$tipo, levels = c(1,2,3), labels = c('Kama', 'Rosa', 'Canadian'))
head(df_seeds)
```

#### PREGUNTA 3 (1pt)

¿Cual es la media del area de cada uno de los tipos?

**Respuesta**

```{r}
df_seeds |> group_by(tipo) |> summarise(media_area = mean(area))


```

#### PREGUNTA 4 (0.5pt)

¿Como se llama el siguiente tipo de gráfico?. ¿Qué representa la línea del centro de la caja?

```{r}
ggplot(df_seeds, aes(x=tipo, y=area)) + geom_boxplot()
```

**Respuesta**: '' Es un Boxplot o diagrama de caja, y representa el rango intercuartílico. La línea del centro representa la mediana.

#### PREGUNTA 5 (1.5pt)

¿Como pintarías un diagrama de puntos (o scatterplot) con ggplot con las siguientes características? - En el eje X la variable compacto - En el eje Y la variable area - Cada tipo de semilla debería tener un color diferente

**Respuesta**:

```{r}
ggplot(df_seeds, aes(x = compacto, y = area, color = tipo))+geom_point()+xlab("Compacto")+ylab("Area")+ggtitle("Relación entre área y compacto")
```

#### PREGUNTA 6 (0.5pt)

¿Qué hace la siguiente línea?:

```{r}
df_seeds |> mutate(is_kama = tipo=='Kama') -> df_seeds
```

**Respuesta**: ''Crea una nueva columna en el dataframe llamada "is_kama" que contiene TRUE si el tipo es "Kama" y FALSE si el tipo no es "Kama".

#### PREGUNTA 7 (1.5pt)

Vamos a dividir el conjunto de datos en test y training porque vamos a entrenar un modelo que me permita diferenciar si una semilla es de tipo Kama o no. ¿Por qué es aconsejable dividir el dataset en los grupos de train y test?

```{r}
set.seed(123) # Este set.seed hace que a todos nos generen los mismos número aleatorios
idx <- sample(1:nrow(df_seeds), 0.7*nrow(df_seeds))
df_seeds_train <- df_seeds[idx,]
df_seeds_test <- df_seeds[-idx,]
```

**Respuesta**: ''Dividimos el dataset en los grupos train y test para entrenarlo con el primero (train) y evaluar el rendimiento con datos desconocidos del segundo (test). Así tenemos una medida más realista de cómo responde el modelo a datos no vistos(test). También prevenimos el overfitting o sobreajuste (que el modelo aprenda detalles específicos de los datos de entrenamiento en vez de patrones generales que se puedan aplicar a nuevos datos). En este caso hemos utilizados el 70% de los datos para hacer el entrenamiento y un 30% de los datos para hacer el test."

#### PREGUNTA 8 (1pt)

Vamos a crear un modelo para realizar una clasificación binaria, donde le pasaremos como entrada las columnas: area, perimetro, compacto, longitud, coeficient.asimetria y longitud.ranura

¿Qué tipo de algoritmo o modelo debería usar?

**Respuesta**: '' Regresión logística".

#### PREGUNTA 9 (1pt)

Crea un modelo que me permita clasificar si una semilla es de tipo Kama o no con las siguientes columnas: area, perimetro, compacto, longitud, coeficient.asimetria, longitud.ranura

**Respuesta**:

```{r}
model <- glm(df_seeds_train, formula=is_kama ~ area + perimetro + compacto + longitud + coeficient.asimetria + longitud.ranura, family=binomial('logit'))
summary(model)
```

#### PREGUNTA 10 (1pt)

Si usamos un umbral de 0 en la salida del modelo (lo que equivale a probabilidad de 0.5 cuando usamos el predict con type='response') ¿Cuales son los valores de precisión y exhausitividad?

**Respuesta**.

```{r}
umbral <- 0.5
pred_test<-predict(model, df_seeds_test, type="response")
M=table(real=df_seeds_test$is_kama, prediction=pred_test<umbral)
M

paste("Precisión:", M[2,2]/(M[1,2]+M[2,2]))
paste("Exhaustividad:", M[2,2]/(M[2,1]+M[2,2]))
```

#### PREGUNTA 11 (1.5pt)

¿Qué están haciendo las siguientes líneas?

```{r}
set.seed(123)
cl<-df_seeds |> select(area,perimetro,compacto,longitud,anchura,coeficient.asimetria,longitud.ranura) |> kmeans(3)
table(real=df_seeds$tipo,cluster=cl$cluster)
```

**Respuesta**: ''Primero usamos set.seed para generar unos números pseudoaleatorios (para todo el que use set.seed(123) serán los mismos, y nosotros mismos, si ejecutamos varias veces, los números no serán diferentes cada vez). Mediante el algoritmo k-means se realizan tres clusters (agrupaciones) en base a las características dadas. La tabla muestra los datos con las etiquetas correspondientes y la disribución de los datos en cada conjunto.
